% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class-module.R
\name{RAVEModule}
\alias{RAVEModule}
\title{Definition for 'RAVE' module class}
\description{
Definition for 'RAVE' module class

Definition for 'RAVE' module class
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{debug}}{whether module is in debug mode}

\item{\code{package}}{'RAVE' module's package name}

\item{\code{package_env}}{package name space}

\item{\code{package_config}}{package configuration list}

\item{\code{module_id}}{module ID string}

\item{\code{module_label}}{friendly display name}

\item{\code{module_group}}{module category}

\item{\code{package_data}}{list storing package key-values pairs}

\item{\code{containers}}{stores run-time instances}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{package_root}}{package root directory, when running in debug
context, returns module debug path, otherwise returns system package path}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{RAVEModule$new()}}
\item \href{#method-add_container}{\code{RAVEModule$add_container()}}
\item \href{#method-get_path}{\code{RAVEModule$get_path()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
constructor
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RAVEModule$new(package, module_id, force = FALSE, debug = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{package}}{character package name}

\item{\code{module_id}}{'RAVE' module ID}

\item{\code{force}}{whether to force reload the source script}

\item{\code{debug}}{whether to set in debug mode}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_container"></a>}}
\if{latex}{\out{\hypertarget{method-add_container}{}}}
\subsection{Method \code{add_container()}}{
Add run-time container instance
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RAVEModule$add_container(session = shiny::getDefaultReactiveDomain())}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{session}}{shiny session}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_path"></a>}}
\if{latex}{\out{\hypertarget{method-get_path}{}}}
\subsection{Method \code{get_path()}}{
get script paths
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RAVEModule$get_path(path)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{relative or absolute, behaves slightly different when
debugging modules, internally used}
}
\if{html}{\out{</div>}}
}
}
}
